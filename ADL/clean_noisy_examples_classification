function [accuracy_svm_gauss] = clean_noisy_examples_classification(clean_test,noisy_test)
% Trains and tests the classifier with clean and noisy data


[~,c] = size(clean_test);
num_train_classifier = floor(c/2);

train_set_clean_classifier = transpose(clean_test(:,1:num_train_classifier));
train_set_noisy_classifier = transpose(noisy_test(:,1:num_train_classifier));
[rtrain,~] = size(train_set_clean_classifier);
train_set_classifier = [train_set_clean_classifier; train_set_noisy_classifier];

labels_clean = ones(1,rtrain);
labels_noisy = 2*ones(1,rtrain);
labels = [labels_clean labels_noisy];


Mdl_svm_gauss = fitcsvm(train_set_classifier,labels,'KernelFunction','gaussian','KernelScale',0.01);
%Mdl_svm_polyn = fitcsvm(train_set_classifier,labels,'KernelFunction','polynomial','PolynomialOrder',20);
%Mdl_tree = fitctree(train_set_classifier,labels);

test_set_classifier = [transpose(clean_test(:,num_train_classifier+1:end)); transpose(noisy_test(:,num_train_classifier+1:end))];
[rtest,~] = size(test_set_classifier); 

labels_clean_test = ones(1,rtest/2);
labels_noisy_test = 2*ones(1,rtest/2);
labels_test = [labels_clean_test labels_noisy_test];

predictions_svm_gauss = predict(Mdl_svm_gauss,(test_set_classifier));
% [C_svm_gauss,~] = confusionmat(labels_test, predictions_svm_gauss);
% FPR1_svm_gauss = C_svm_gauss(1,2)/(C_svm_gauss(1,1) + C_svm_gauss(1,2));
% FPR2_svm_gauss = C_svm_gauss(2,1)/(C_svm_gauss(2,1) + C_svm_gauss(2,2));
% TPR1_svm_gauss = C_svm_gauss(1,1)/(C_svm_gauss(1,1) + C_svm_gauss(1,2));
% TPR2_svm_gauss = C_svm_gauss(2,2)/(C_svm_gauss(2,1) + C_svm_gauss(2,2));

%predictions_svm_polyn = predict(Mdl_svm_polyn,(test_set_classifier));
% [C_svm_polyn,~] = confusionmat(labels_test, predictions_svm_polyn);
% FPR1_svm_polyn = C_svm_polyn(1,2)/(C_svm_polyn(1,1) + C_svm_polyn(1,2));
% FPR2_svm_polyn = C_svm_polyn(2,1)/(C_svm_polyn(2,1) + C_svm_polyn(2,2));
% TPR1_svm_polyn = C_svm_polyn(1,1)/(C_svm_polyn(1,1) + C_svm_polyn(1,2));
% TPR2_svm_polyn = C_svm_polyn(2,2)/(C_svm_polyn(2,1) + C_svm_polyn(2,2));

%predictions_tree = predict(Mdl_tree,(test_set_classifier));
% [C_tree,~] = confusionmat(labels_test, predictions_tree);
% FPR1_tree = C_tree(1,2)/(C_tree(1,1) + C_tree(1,2));
% FPR2_tree = C_tree(2,1)/(C_tree(2,1) + C_tree(2,2));
% TPR1_tree = C_tree(1,1)/(C_tree(1,1) + C_tree(1,2));
% TPR2_tree = C_tree(2,2)/(C_tree(2,1) + C_tree(2,2));


accuracy_svm_gauss = (length(predictions_svm_gauss)-nnz(labels_test' - predictions_svm_gauss))/length(labels_test);
% accuracy_svm_polyn = (length(predictions_svm_polyn)-nnz(labels_test' - predictions_svm_polyn))/length(labels_test);
% accuracy_tree = (length(predictions_tree)-nnz(labels_test' - predictions_tree))/length(labels_test);




end
